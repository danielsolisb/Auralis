# Generated by Django 4.2 on 2025-09-20 11:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sensorhub', '0009_sensor_ip_address_sensor_mqtt_topic_sensor_port_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Ej: 'Predictor de Producción - Pozos BES v1.1'", max_length=200, unique=True, verbose_name='nombre del modelo')),
                ('description', models.TextField(blank=True, help_text='¿Qué hace este modelo? ¿Para qué industria sirve? ¿Qué variables espera?', verbose_name='descripción')),
                ('version', models.CharField(default='1.0.0', help_text="Versión del modelo, ej: '1.0.1'.", max_length=20, verbose_name='versión')),
                ('model_file_path', models.CharField(help_text='Ruta en Google Cloud Storage al archivo .h5 o .pkl del modelo entrenado.', max_length=512, verbose_name='ruta del archivo del modelo')),
                ('training_parameters', models.JSONField(blank=True, default=dict, help_text="Metadata sobre cómo fue entrenado. Ej: {'industry': 'Oil&Gas', 'features': ['Temp', 'Pressure']}", verbose_name='parámetros de entrenamiento')),
                ('is_active', models.BooleanField(default=True, help_text='Solo los modelos activos serán utilizados para predicciones.', verbose_name='activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'modelo de ML',
                'verbose_name_plural': 'modelos de ML',
                'ordering': ['name', '-version'],
            },
        ),
        migrations.CreateModel(
            name='ModelAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Desmarcar para pausar las predicciones para esta estación sin borrar la configuración.', verbose_name='asignación activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='intelligence_engine.mlmodel', verbose_name='modelo de ML')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_assignments', to='sensorhub.station', verbose_name='estación')),
            ],
            options={
                'verbose_name': 'asignación de modelo',
                'verbose_name_plural': 'asignaciones de modelos',
                'unique_together': {('station', 'ml_model')},
            },
        ),
        migrations.CreateModel(
            name='PredictionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='título del evento')),
                ('description', models.TextField(verbose_name='descripción detallada')),
                ('prediction_confidence', models.FloatField(blank=True, help_text='Valor entre 0.0 y 1.0 que indica la confianza del modelo.', null=True, verbose_name='confianza de la predicción')),
                ('event_time', models.DateTimeField(help_text='El momento en el futuro para el cual se predice el evento.', verbose_name='fecha y hora del evento predicho')),
                ('status', models.CharField(choices=[('ACTIVE', 'Activo'), ('ACKNOWLEDGED', 'Confirmado'), ('RESOLVED', 'Resuelto')], db_index=True, default='ACTIVE', max_length=20, verbose_name='estado')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Cualquier otra data relevante, como los valores de los sensores en ese momento.', verbose_name='detalles adicionales')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_events', to='intelligence_engine.modelassignment', verbose_name='asignación de modelo')),
            ],
            options={
                'verbose_name': 'evento de predicción',
                'verbose_name_plural': 'eventos de predicción',
                'ordering': ['-event_time'],
            },
        ),
    ]
