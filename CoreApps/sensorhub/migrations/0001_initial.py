# Generated by Django 4.2 on 2025-03-11 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('configuration', models.JSONField(blank=True, default=dict, verbose_name='configuración')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('firmware_version', models.CharField(blank=True, max_length=50, verbose_name='versión de firmware')),
                ('installation_date', models.DateField(blank=True, null=True, verbose_name='fecha de instalación')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='último mantenimiento')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('min_value', models.FloatField(blank=True, help_text='Valor mínimo aceptable para este sensor', null=True, verbose_name='valor mínimo')),
                ('max_value', models.FloatField(blank=True, help_text='Valor máximo aceptable para este sensor', null=True, verbose_name='valor máximo')),
            ],
            options={
                'verbose_name': 'sensor',
                'verbose_name_plural': 'sensores',
                'ordering': ['station', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='nombre')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('unit', models.CharField(max_length=20, verbose_name='unidad de medida')),
            ],
            options={
                'verbose_name': 'tipo de sensor',
                'verbose_name_plural': 'tipos de sensores',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nombre')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('location', models.CharField(max_length=200, verbose_name='ubicación')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='longitud')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='última actualización')),
                ('owner', models.ForeignKey(limit_choices_to={'user_type': 'CL'}, on_delete=django.db.models.deletion.PROTECT, related_name='owned_stations', to=settings.AUTH_USER_MODEL, verbose_name='propietario')),
                ('supervisors', models.ManyToManyField(blank=True, limit_choices_to={'user_type': 'SV'}, related_name='supervised_stations', to=settings.AUTH_USER_MODEL, verbose_name='supervisores')),
            ],
            options={
                'verbose_name': 'estación',
                'verbose_name_plural': 'estaciones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SensorMaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateField(verbose_name='fecha de mantenimiento')),
                ('description', models.TextField(verbose_name='descripción del mantenimiento')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='próximo mantenimiento')),
                ('performed_by', models.ForeignKey(limit_choices_to={'company__is_platform_owner': True, 'user_type': 'OP'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='realizado por')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to='sensorhub.sensor')),
            ],
            options={
                'verbose_name': 'registro de mantenimiento',
                'verbose_name_plural': 'registros de mantenimiento',
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.AddField(
            model_name='sensor',
            name='sensor_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sensors', to='sensorhub.sensortype', verbose_name='tipo de sensor'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='sensorhub.station', verbose_name='estación'),
        ),
    ]
